on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: simple
      - name: print release info
        run: |
          echo "Release created: ${{ steps.release.outputs.release_created }}"
          echo "Version: ${{ steps.release.outputs.version || 'no new version' }}"
  
  # Only prints the version number at the moment. But should build the docker image when the version number is present. 
  build-docker-image:
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - name: print version number
        run: |
          if [[ "${{ needs.release-please.outputs.release-created }}" == "true" ]]; then
            echo "New release version: ${{ needs.release-please.outputs.version }}"
          else
            echo "No new release was created"
          fi
  
  # add-automerge-tag:
  #   runs-on: ubuntu-latest
  #   needs: release-please
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: add automerge tag
  #       if: ${{ needs.release-please.outputs.release-created }}
  #       run: |
  #         git config user.name github-actions[bot]
  #         git config user.email fake@mail.com
  #         git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/googleapis/release-please-action.git"
  #         git tag -a automerge -m "Add the automerge tag"
  #         git push origin automerge
          
    
  
  automerge-version-pull-request:
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - id: automerge
        name: automerge
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "automerge, autorelease:pending"
          MERGE_REMOVE_LABELS: "automerge, autorelease:pending"
      - name: feedback
        if: ${{ steps.automerge.outputs.mergeResult == 'merged' }}
        run: |
          echo "Pull request ${{ steps.automerge.outputs.pullRequestNumber }} merged!"
    
    
